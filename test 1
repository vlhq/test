local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer

local scriptToLoad = [[
    local TweenService = game:GetService("TweenService")
    local UIS = game:GetService("UserInputService")
    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer

    -- Debug function
    local function DebugInfo(mode, content, value)
        if mode == "warn" then
            warn("[ArbixTP DEBUG]: " .. content .. (value and " " .. tostring(value) or ""))
        elseif mode == "print" then
            print("[ArbixTP DEBUG]: " .. content .. (value and " " .. tostring(value) or ""))
        end
    end

    -- Create ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "ArbixTPGui"
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.IgnoreGuiInset = true
    ScreenGui.DisplayOrder = 999
    ScreenGui.Parent = Player:WaitForChild("PlayerGui")
    DebugInfo("print", "ScreenGui created")

    -- Create BlurEffect
    local Blur = Instance.new("BlurEffect")
    Blur.Name = "ArbixTPBlur"
    Blur.Size = 0
    Blur.Parent = workspace
    DebugInfo("print", "BlurEffect created")

    -- Create Frame
    local isMobile = UIS.TouchEnabled
    local Frame = Instance.new("Frame")
    Frame.Parent = ScreenGui
    Frame.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
    Frame.BorderSizePixel = 0
    Frame.AnchorPoint = Vector2.new(0.5, 0.5)
    Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
    local originalSize = isMobile and UDim2.new(0.7, 0, 0.5, 0) or UDim2.new(0, 400, 0, 300)
    local minimizedSize = isMobile and UDim2.new(0.4, 0, 0, 40) or UDim2.new(0, 200, 0, 40)
    Frame.Size = UDim2.new(0, 0, 0, 0) -- Start at 0 for animation
    Frame.ClipsDescendants = true
    Frame.BackgroundTransparency = 1
    DebugInfo("print", "Frame created", "Mobile: " .. tostring(isMobile))

    -- Create TitleBar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Parent = Frame
    TitleBar.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
    TitleBar.BorderSizePixel = 0
    TitleBar.Size = UDim2.new(1, 0, 0, 40)
    TitleBar.ZIndex = 2

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "Title"
    TitleLabel.Parent = TitleBar
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Size = UDim2.new(1, -80, 1, 0)
    TitleLabel.Position = UDim2.new(0, 15, 0, 0)
    TitleLabel.Font = Enum.Font.GothamBlack
    TitleLabel.Text = "BUENARDOVICH TP"
    TitleLabel.TextColor3 = Color3.fromRGB(77, 0, 255)
    TitleLabel.TextSize = isMobile and 16 or 20
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.TextTransparency = 1

    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Parent = TitleBar
    CloseButton.BackgroundTransparency = 1
    CloseButton.Position = UDim2.new(0.95, -20, 0.5, 0)
    CloseButton.Size = UDim2.new(0, 24, 0, 24)
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 80, 80)
    CloseButton.TextSize = isMobile and 14 or 16
    CloseButton.TextTransparency = 1

    -- Initial animation
    DebugInfo("print", "Starting GUI animation")
    TweenService:Create(Blur, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = 15}):Play()
    TweenService:Create(Frame, TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Size = originalSize,
        BackgroundTransparency = 0
    }):Play()
    TweenService:Create(TitleLabel, TweenInfo.new(0.4), {TextTransparency = 0}):Play()
    TweenService:Create(CloseButton, TweenInfo.new(0.4), {TextTransparency = 0}):Play()

    -- Close button functionality
    CloseButton.MouseButton1Click:Connect(function()
        DebugInfo("print", "Close button clicked")
        TweenService:Create(Frame, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {
            Size = UDim2.new(0, 0, 0, 0),
            BackgroundTransparency = 1
        }):Play()
        TweenService:Create(Blur, TweenInfo.new(0.4), {Size = 0}):Play()
        task.wait(0.4)
        ScreenGui:Destroy()
        Blur:Destroy()
        DebugInfo("print", "GUI closed")
    end)

    -- Dragging logic for mouse and touch
    local dragging = false
    local dragStart, startPos

    local function startDragging(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            dragging = true
            dragStart = input.Position
            startPos = Frame.Position
            DebugInfo("print", "Dragging started", input.UserInputType.Name)
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                    DebugInfo("print", "Dragging ended")
                end
            end)
        end
    end

    local function updateDragging(input)
        if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and dragging then
            local delta = input.Position - dragStart
            local goal = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
            Frame:TweenPosition(goal, Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 0.05, true)
        end
    end

    TitleBar.InputBegan:Connect(startDragging)
    TitleBar.InputChanged:Connect(updateDragging)
    UIS.InputBegan:Connect(startDragging)
    UIS.InputChanged:Connect(updateDragging)

    DebugInfo("print", "GUI initialization completed")
]]

-- Execute the script
local success, errorMsg = pcall(function()
    local func = loadstring(scriptToLoad)
    if not func then
        error("Failed to compile scriptToLoad")
    end
    func()
end)

if not success then
    warn("[ArbixHub ERROR]: Failed to execute scriptToLoad: " .. tostring(errorMsg))
else
    print("[ArbixHub]: Successfully executed scriptToLoad")
end
