```lua
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local random = Random.new()

-- Función de depuración
local function debugLog(msg, value)
    print("[DEBUG ArbixTP] " .. msg .. (value and " " .. tostring(value) or ""))
end
debugLog("Script iniciado")

-- Configuración del personaje
local char, humanoid, hrp
local function GetCharacter()
    return Player.Character or Player.CharacterAdded:Wait()
end

local function SetupCharacter()
    char = GetCharacter()
    humanoid = char:WaitForChild("Humanoid", 5)
    hrp = char:WaitForChild("HumanoidRootPart", 5)
    debugLog("Personaje configurado para", Player.Name)
end

SetupCharacter()
Player.CharacterAdded:Connect(SetupCharacter)

-- Calcular tpAmt desde la latencia
local tpAmt
task.spawn(function()
    while true do
        local ping = Player:GetNetworkPing() * 1000
        tpAmt = math.clamp(math.floor(ping * 0.8), 10, 150)
        debugLog("Ping: " .. math.floor(ping) .. "ms | tpAmt:", tpAmt)
        RunService.Heartbeat:Wait()
    end
end)

-- Función de teletransporte
local teleporting
local void = CFrame.new(0, -3.4028234663852886e+38, 0)
local function TP(position)
    if not teleporting then
        teleporting = true
        if typeof(position) == "CFrame" then
            hrp.CFrame = position + Vector3.new(
                random:NextNumber(-0.0001, 0.0001),
                random:NextNumber(-0.0001, 0.0001),
                random:NextNumber(-0.0001, 0.0001)
            )
            RunService.Heartbeat:Wait()
            teleporting = false
        end
    else
        debugLog("Ya estás teletransportándote")
    end
end

-- Función DeliverBrainrot
local function FindDelivery()
    local plots = workspace:FindFirstChild("Plots")
    if not plots then
        debugLog("Carpeta Plots no encontrada en workspace")
        return
    end
    for _, plot in pairs(plots:GetChildren()) do
        local sign = plot:FindFirstChild("PlotSign")
        if sign then
            local yourBase = sign:FindFirstChild("YourBase")
            if yourBase and yourBase.Enabled then
                local hitbox = plot:FindFirstChild("DeliveryHitbox")
                if hitbox then return hitbox end
            end
        end
    end
    debugLog("No se encontró un DeliveryHitbox válido")
end

local function DeliverBrainrot(statusLabel)
    debugLog("Botón DeliverBrainrot presionado")
    local hitbox = FindDelivery()
    if not hitbox then
        statusLabel.Text = "Error: DeliveryHitbox no encontrado"
        statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
        TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
        task.wait(2)
        TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
        return
    end

    debugLog("DeliveryHitbox encontrado", hitbox)

    local target = hitbox.CFrame * CFrame.new(0, -3, 0)
    local i = 0
    while i < (tpAmt or 70) do
        TP(target)
        i += 1
    end
    for _ = 1, 2 do
        TP(void)
    end
    i = 0
    while i < (tpAmt / 16) do
        TP(target)
        i += 1
    end
    task.wait(1)

    local distance = (hrp.Position - target.Position).Magnitude
    if distance <= 30 then
        debugLog("Teletransporte exitoso", distance)
        statusLabel.Text = "¡Teletransporte Exitoso!"
        statusLabel.TextColor3 = Color3.fromRGB(0, 255, 100)
    else
        debugLog("Teletransporte fallido", distance)
        statusLabel.Text = "Teletransporte Fallido: Muy lejos (" .. math.floor(distance) .. ")"
        statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
    end
    TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
    task.wait(2)
    TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
end

-- Función TPNearestBase
local function TPNearestBase(statusLabel)
    debugLog("Botón TPNearestBase presionado")
    local plotsFolder = workspace:FindFirstChild("Plots")
    if not plotsFolder then
        debugLog("Carpeta Plots no encontrada")
        statusLabel.Text = "Error: Carpeta Plots no encontrada"
        statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
        TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
        task.wait(2)
        TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
        return
    end

    local closestBrainrot = nil
    local shortestDistance = math.huge

    for _, plot in pairs(plotsFolder:GetChildren()) do
        local plotSign = plot:FindFirstChild("PlotSign")
        if plotSign then
            local plotSignText = plotSign:FindFirstChild("SurfaceGui") and plotSign:FindFirstChild("SurfaceGui"):FindFirstChild("Frame") and plotSign:FindFirstChild("SurfaceGui"):FindFirstChild("Frame"):FindFirstChild("TextLabel")
            if plotSignText and plotSignText.ContentText ~= "Empty Base" then
                local yourBase = plotSign:FindFirstChild("YourBase")
                if yourBase and not yourBase.Enabled then
                    local podiums = plot:FindFirstChild("AnimalPodiums")
                    if podiums then
                        for _, brainrot in pairs(podiums:GetChildren()) do
                            if brainrot:IsA("Model") and brainrot:FindFirstChild("Base") and brainrot.Base:FindFirstChild("Spawn") then
                                local brainrotSpawn = brainrot.Base.Spawn
                                local distance = (brainrotSpawn.Position - hrp.Position).Magnitude
                                if distance < shortestDistance then
                                    shortestDistance = distance
                                    closestBrainrot = brainrotSpawn
                                end
                            end
                        end
                    end
                end
            end
        end
    end

    if not closestBrainrot then
        debugLog("No se encontró un podium válido")
        statusLabel.Text = "Error: No se encontró un podium válido"
        statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
        TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
        task.wait(2)
        TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
        return
    end

    debugLog("Podium más cercano encontrado", closestBrainrot)

    local target = closestBrainrot.CFrame * CFrame.new(0, 2, 0)
    local i = 0
    while i < (tpAmt or 70) do
        TP(target)
        i += 1
    end
    for _ = 1, 2 do
        TP(void)
    end
    i = 0
    while i < (tpAmt / 16) do
        TP(target)
        i += 1
    end
    task.wait(1)

    local distance = (hrp.Position - target.Position).Magnitude
    if distance <= 30 then
        debugLog("Teletransporte exitoso", distance)
        statusLabel.Text = "¡Teletransporte Exitoso!"
        statusLabel.TextColor3 = Color3.fromRGB(0, 255, 100)
    else
        debugLog("Teletransporte fallido", distance)
        statusLabel.Text = "Teletransporte Fallido: Muy lejos (" .. math.floor(distance) .. ")"
        statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
    end
    TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
    task.wait(2)
    TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
end

-- Función TweenSteal
local function TweenSteal(statusLabel)
    debugLog("Botón TweenSteal presionado")
    local TELEPORT_ITERATIONS = 85
    local VOID_CFRAME = CFrame.new(0, -3e40, 0)
    local JITTER_RANGE = 0.0002

    local function executeStealthMovement(targetCF, steps)
        if not hrp or typeof(targetCF) ~= "CFrame" then
            debugLog("HRP o CFrame de destino inválido")
            return false
        end
        local currentPos = hrp.Position
        local targetPos = targetCF.Position
        local startTime = tick()
        for i = 1, steps do
            local progress = (tick() - startTime) / (steps * 0.02)
            progress = math.min(progress, 1)
            local curvedProgress = progress * progress * (3 - 2 * progress)
            local newPos = currentPos:Lerp(targetPos, curvedProgress)
            newPos += Vector3.new(
                random:NextNumber(-JITTER_RANGE, JITTER_RANGE),
                random:NextNumber(-JITTER_RANGE, JITTER_RANGE),
                random:NextNumber(-JITTER_RANGE, JITTER_RANGE)
            )
            hrp.CFrame = CFrame.new(newPos) * (hrp.CFrame - hrp.Position)
            local waitTime = random:NextNumber(0.005, 0.015)
            task.wait(waitTime)
        end
        return true
    end

    local function findDeliverySpot()
        for _, v in ipairs(workspace.Plots:GetDescendants()) do
            if v.Name == "DeliveryHitbox" and v.Parent:FindFirstChild("PlotSign") then
                if v.Parent.PlotSign:FindFirstChild("YourBase") and v.Parent.PlotSign.YourBase.Enabled then
                    return v
                end
            end
        end
        debugLog("No se encontró un DeliveryHitbox válido para TweenSteal")
        return nil
    end

    local delivery = findDeliverySpot()
    if not delivery then
        statusLabel.Text = "Error: DeliveryHitbox no encontrado"
        statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
        TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
        task.wait(2)
        TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
        return
    end

    debugLog("DeliveryHitbox encontrado para TweenSteal", delivery)

    local targetPos = delivery.CFrame * CFrame.new(0, random:NextInteger(-3, -1), 0)
    for _ = 1, 3 do
        task.spawn(function()
            local success = executeStealthMovement(targetPos, TELEPORT_ITERATIONS)
            if success then
                for _ = 1, 3 do
                    hrp.CFrame = VOID_CFRAME
                    task.wait(random:NextNumber(0.05, 0.1))
                    hrp.CFrame = targetPos
                    task.wait(random:NextNumber(0.05, 0.1))
                end
            end
            task.wait(random:NextNumber(0.1, 0.3))
        end)
    end

    task.wait(1)
    local distance = (hrp.Position - targetPos.Position).Magnitude
    if distance <= 30 then
        debugLog("TweenSteal exitoso", distance)
        statusLabel.Text = "¡TweenSteal Exitoso!"
        statusLabel.TextColor3 = Color3.fromRGB(0, 255, 100)
    else
        debugLog("TweenSteal fallido", distance)
        statusLabel.Text = "TweenSteal Fallido: Muy lejos (" .. math.floor(distance) .. ")"
        statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
    end
    TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
    task.wait(2)
    TweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
end

-- Configuración de la UI
local gui = Instance.new("ScreenGui")
gui.Name = "ArbixTPGui"
gui.IgnoreGuiInset = true
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.DisplayOrder = 999
local success, err = pcall(function()
    gui.Parent = Player:WaitForChild("PlayerGui", 5)
end)
if not success then
    debugLog("Error al asignar PlayerGui:", err)
    return
end
debugLog("ScreenGui creado")

-- Blur
local blur = Instance.new("BlurEffect")
blur.Size = 0
blur.Parent = workspace
debugLog("BlurEffect creado")

-- Frame
local isMobile = UserInputService.TouchEnabled
local frame = Instance.new("Frame")
frame.Parent = gui
frame.Size = UDim2.new(0, 0, 0, 0)
frame.Position = UDim2.new(0.5, 0, 0.5, 0)
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
frame.BackgroundTransparency = 1
frame.ClipsDescendants = true
debugLog("Frame creado", "Mobile: " .. tostring(isMobile))

-- Esquinas
local corner = Instance.new("UICorner", frame)
corner.CornerRadius = UDim.new(0, 12)

-- Gradiente
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 20, 30)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 10, 20))
})
gradient.Rotation = 45
gradient.Parent = frame

-- Sombra
local dropShadow = Instance.new("ImageLabel")
dropShadow.Name = "DropShadow"
dropShadow.Parent = frame
dropShadow.AnchorPoint = Vector2.new(0.5, 0.5)
dropShadow.BackgroundTransparency = 1
dropShadow.Position = UDim2.new(0.5, 0, 0.5, 8)
dropShadow.Size = UDim2.new(1, 24, 1, 24)
dropShadow.Image = "rbxassetid://6014261993"
dropShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
dropShadow.ImageTransparency = 1
dropShadow.ScaleType = Enum.ScaleType.Slice
dropShadow.SliceCenter = Rect.new(10, 10, 118, 118)
dropShadow.ZIndex = -1
debugLog("DropShadow creado")

-- TitleBar
local titleBar = Instance.new("Frame", frame)
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
titleBar.ZIndex = 10
debugLog("TitleBar creado")

local titleCorner = Instance.new("UICorner", titleBar)
titleCorner.CornerRadius = UDim.new(0, 12)

local titleBarGradient = Instance.new("UIGradient")
titleBarGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 35)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 25))
})
titleBarGradient.Parent = titleBar

-- Título
local title = Instance.new("TextLabel", titleBar)
title.Text = "BUENARDOVICH TP"
title.Font = Enum.Font.GothamBlack
title.TextSize = isMobile and 12 or 16
title.TextColor3 = Color3.fromRGB(77, 0, 255)
title.BackgroundTransparency = 1
title.Size = UDim2.new(1, -60, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.TextXAlignment = Enum.TextXAlignment.Left
title.TextTransparency = 1
title.ZIndex = 11
debugLog("TitleLabel creado")

-- Botón de minimizar
local minimizeBtn = Instance.new("TextButton", titleBar)
minimizeBtn.Name = "MinimizeButton"
minimizeBtn.BackgroundTransparency = 1
minimizeBtn.Position = UDim2.new(0.85, -15, 0.5, -10)
minimizeBtn.Size = UDim2.new(0, 20, 0, 20)
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.Text = "—"
minimizeBtn.TextColor3 = Color3.fromRGB(255, 204, 0)
minimizeBtn.TextSize = isMobile and 10 or 12
minimizeBtn.TextTransparency = 1
minimizeBtn.ZIndex = 11
debugLog("MinimizeButton creado")

-- Botón de cerrar
local closeBtn = Instance.new("TextButton", titleBar)
closeBtn.Text = "X"
closeBtn.Size = UDim2.new(0, 20, 0, 20)
closeBtn.Position = UDim2.new(0.95, -15, 0.5, -10)
closeBtn.BackgroundTransparency = 1
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextColor3 = Color3.fromRGB(255, 80, 80)
closeBtn.TextSize = isMobile and 10 or 12
closeBtn.TextTransparency = 1
closeBtn.ZIndex = 11
debugLog("CloseButton creado")

-- Contenido
local content = Instance.new("Frame", frame)
content.Size = UDim2.new(1, 0, 1, -30)
content.Position = UDim2.new(0, 0, 0, 30)
content.BackgroundTransparency = 1
content.ZIndex = 5
content.Visible = true
debugLog("Content frame creado")

-- Botón Delivery
local deliveryBtn = Instance.new("TextButton", content)
deliveryBtn.Name = "DeliveryButton"
deliveryBtn.Size = UDim2.new(0.8, 0, 0, isMobile and 25 or 30)
deliveryBtn.Position = UDim2.new(0.1, 0, 0.1, 0)
deliveryBtn.Text = "TP SOPHIE RAIN EN 4"
deliveryBtn.Font = Enum.Font.GothamSemibold
deliveryBtn.TextSize = isMobile and 10 or 12
deliveryBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
deliveryBtn.BackgroundColor3 = Color3.fromRGB(77, 0, 255)
deliveryBtn.TextTransparency = 1
deliveryBtn.BackgroundTransparency = 1
deliveryBtn.AutoButtonColor = false
deliveryBtn.ZIndex = 6
debugLog("DeliveryButton creado")

local cornerDelivery = Instance.new("UICorner", deliveryBtn)
cornerDelivery.CornerRadius = UDim.new(0, 8)
local strokeDelivery = Instance.new("UIStroke", deliveryBtn)
strokeDelivery.Color = Color3.fromRGB(0, 80, 200)
strokeDelivery.Thickness = 2
strokeDelivery.Transparency = 1

-- Botón Base
local baseBtn = Instance.new("TextButton", content)
baseBtn.Name = "BaseButton"
baseBtn.Size = UDim2.new(0.8, 0, 0, isMobile and 25 or 30)
baseBtn.Position = UDim2.new(0.1, 0, 0.3, 0)
baseBtn.Text = "TP ADENTRO DE SOPHIERAIN"
baseBtn.Font = Enum.Font.GothamSemibold
baseBtn.TextSize = isMobile and 10 or 12
baseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
baseBtn.BackgroundColor3 = Color3.fromRGB(77, 0, 255)
baseBtn.TextTransparency = 1
baseBtn.BackgroundTransparency = 1
baseBtn.AutoButtonColor = false
baseBtn.ZIndex = 6
debugLog("BaseButton creado")

local cornerBase = Instance.new("UICorner", baseBtn)
cornerBase.CornerRadius = UDim.new(0, 8)
local strokeBase = Instance.new("UIStroke", baseBtn)
strokeBase.Color = Color3.fromRGB(0, 80, 200)
strokeBase.Thickness = 2
strokeBase.Transparency = 1

-- Botón TweenSteal
local tweenStealBtn = Instance.new("TextButton", content)
tweenStealBtn.Name = "TweenStealButton"
tweenStealBtn.Size = UDim2.new(0.8, 0, 0, isMobile and 25 or 30)
tweenStealBtn.Position = UDim2.new(0.1, 0, 0.5, 0)
tweenStealBtn.Text = "ROBO ENCIMA DE SOPHIE"
tweenStealBtn.Font = Enum.Font.GothamSemibold
tweenStealBtn.TextSize = isMobile and 10 or 12
tweenStealBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
tweenStealBtn.BackgroundColor3 = Color3.fromRGB(77, 0, 255)
tweenStealBtn.TextTransparency = 1
tweenStealBtn.BackgroundTransparency = 1
tweenStealBtn.AutoButtonColor = false
tweenStealBtn.ZIndex = 6
debugLog("TweenStealButton creado")

local cornerTweenSteal = Instance.new("UICorner", tweenStealBtn)
cornerTweenSteal.CornerRadius = UDim.new(0, 8)
local strokeTweenSteal = Instance.new("UIStroke", tweenStealBtn)
strokeTweenSteal.Color = Color3.fromRGB(0, 80, 200)
strokeTweenSteal.Thickness = 2
strokeTweenSteal.Transparency = 1

-- Etiqueta de estado
local statusLabel = Instance.new("TextLabel", content)
statusLabel.Name = "StatusLabel"
statusLabel.Size = UDim2.new(0.8, 0, 0, isMobile and 20 or 25)
statusLabel.Position = UDim2.new(0.1, 0, 0.7, 0)
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.TextSize = isMobile and 10 or 12
statusLabel.TextTransparency = 1
statusLabel.BackgroundTransparency = 1
statusLabel.Text = ""
statusLabel.TextWrapped = true
statusLabel.ZIndex = 6
debugLog("StatusLabel creado")

-- Efectos de hover
local function createHoverEffect(button, stroke)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {
            BackgroundColor3 = Color3.fromRGB(0, 140, 255),
            TextColor3 = Color3.fromRGB(255, 255, 255)
        }):Play()
        TweenService:Create(stroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {
            Color = Color3.fromRGB(0, 100, 220),
            Thickness = 3,
            Transparency = 0.2
        }):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {
            BackgroundColor3 = Color3.fromRGB(77, 0, 255),
            TextColor3 = Color3.fromRGB(255, 255, 255)
        }):Play()
        TweenService:Create(stroke, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {
            Color = Color3.fromRGB(0, 80, 200),
            Thickness = 2,
            Transparency = 0.5
        }):Play()
    end)
end

createHoverEffect(deliveryBtn, strokeDelivery)
createHoverEffect(baseBtn, strokeBase)
createHoverEffect(tweenStealBtn, strokeTweenSteal)

-- Animaciones de entrada
local finalSize = isMobile and UDim2.new(0.5, 0, 0.35, 0) or UDim2.new(0, 350, 0, 250)
local minimizedSize = isMobile and UDim2.new(0.3, 0, 0, 30) or UDim2.new(0, 200, 0, 30)
debugLog("Iniciando animación de la UI")
task.wait(0.1)
TweenService:Create(blur, TweenInfo.new(0.5), {Size = 15}):Play()
TweenService:Create(frame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Size = finalSize,
    BackgroundTransparency = 0
}):Play()
TweenService:Create(dropShadow, TweenInfo.new(0.5), {ImageTransparency = 0.6, Visible = true}):Play()

task.wait(0.4)
TweenService:Create(title, TweenInfo.new(0.4), {TextTransparency = 0}):Play()
TweenService:Create(minimizeBtn, TweenInfo.new(0.4), {TextTransparency = 0}):Play()
TweenService:Create(closeBtn, TweenInfo.new(0.4), {TextTransparency = 0}):Play()

task.wait(0.2)
TweenService:Create(deliveryBtn, TweenInfo.new(0.4), {TextTransparency = 0, BackgroundTransparency = 0}):Play()
TweenService:Create(strokeDelivery, TweenInfo.new(0.4), {Transparency = 0}):Play()
TweenService:Create(baseBtn, TweenInfo.new(0.4), {TextTransparency = 0, BackgroundTransparency = 0}):Play()
TweenService:Create(strokeBase, TweenInfo.new(0.4), {Transparency = 0}):Play()
TweenService:Create(tweenStealBtn, TweenInfo.new(0.4), {TextTransparency = 0, BackgroundTransparency = 0}):Play()
TweenService:Create(strokeTweenSteal, TweenInfo.new(0.4), {Transparency = 0}):Play()
TweenService:Create(statusLabel, TweenInfo.new(0.4), {TextTransparency = 1}):Play()
debugLog("Animación de la UI completada, los botones deberían ser visibles")

-- Funcionalidad de los botones
deliveryBtn.MouseButton1Click:Connect(function()
    debugLog("Botón Delivery presionado")
    DeliverBrainrot(statusLabel)
end)

baseBtn.MouseButton1Click:Connect(function()
    debugLog("Botón Base presionado")
    TPNearestBase(statusLabel)
end)

tweenStealBtn.MouseButton1Click:Connect(function()
    debugLog("Botón TweenSteal presionado")
    TweenSteal(statusLabel)
end)

-- Botón de minimizar
local isMinimized = false
minimizeBtn.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    local targetSize = isMinimized and minimizedSize or finalSize
    local contentTransparency = isMinimized and 1 or 0
    TweenService:Create(frame, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {
        Size = targetSize,
        BackgroundColor3 = Color3.fromRGB(15, 15, 20)
    }):Play()
    TweenService:Create(content, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {
        Visible = not isMinimized
    }):Play()
    TweenService:Create(dropShadow, TweenInfo.new(0.4), {
        ImageTransparency = 0.6,
        Visible = true
    }):Play()
    TweenService:Create(deliveryBtn, TweenInfo.new(0.4), {TextTransparency = contentTransparency, BackgroundTransparency = contentTransparency}):Play()
    TweenService:Create(strokeDelivery, TweenInfo.new(0.4), {Transparency = contentTransparency}):Play()
    TweenService:Create(baseBtn, TweenInfo.new(0.4), {TextTransparency = contentTransparency, BackgroundTransparency = contentTransparency}):Play()
    TweenService:Create(strokeBase, TweenInfo.new(0.4), {Transparency = contentTransparency}):Play()
    TweenService:Create(tweenStealBtn, TweenInfo.new(0.4), {TextTransparency = contentTransparency, BackgroundTransparency = contentTransparency}):Play()
    TweenService:Create(strokeTweenSteal, TweenInfo.new(0.4), {Transparency = contentTransparency}):Play()
    TweenService:Create(statusLabel, TweenInfo.new(0.4), {TextTransparency = contentTransparency}):Play()
    minimizeBtn.Text = isMinimized and "□" or "—"
    debugLog("Minimizado toggled", isMinimized and "Minimizado" or "Restaurado")
end)

-- Botón de cerrar
closeBtn.MouseButton1Click:Connect(function()
    debugLog("Botón de cerrar presionado")
    TweenService:Create(frame, TweenInfo.new(0.3), {
        Size = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1
    }):Play()
    TweenService:Create(blur, TweenInfo.new(0.3), {Size = 0}):Play()
    task.wait(0.3)
    gui:Destroy()
    blur:Destroy()
    debugLog("UI cerrada")
end)

-- Toggle de visibilidad (RightShift)
local isGuiVisible = true
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end
    if input.KeyCode == Enum.KeyCode.RightShift then
        isGuiVisible = not isGuiVisible
        if isGuiVisible then
            TweenService:Create(frame, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
                Size = isMinimized and minimizedSize or finalSize,
                BackgroundTransparency = 0
            }):Play()
            TweenService:Create(blur, TweenInfo.new(0.4), {Size = 15}):Play()
            TweenService:Create(dropShadow, TweenInfo.new(0.4), {ImageTransparency = 0.6, Visible = true}):Play()
            TweenService:Create(content, TweenInfo.new(0.4), {Visible = not isMinimized}):Play()
            if not isMinimized then
                TweenService:Create(deliveryBtn, TweenInfo.new(0.4), {TextTransparency = 0, BackgroundTransparency = 0}):Play()
                TweenService:Create(strokeDelivery, TweenInfo.new(0.4), {Transparency = 0}):Play()
                TweenService:Create(baseBtn, TweenInfo.new(0.4), {TextTransparency = 0, BackgroundTransparency = 0}):Play()
                TweenService:Create(strokeBase, TweenInfo.new(0.4), {Transparency = 0}):Play()
                TweenService:Create(tweenStealBtn, TweenInfo.new(0.4), {TextTransparency = 0, BackgroundTransparency = 0}):Play()
                TweenService:Create(strokeTweenSteal, TweenInfo.new(0.4), {Transparency = 0}):Play()
                TweenService:Create(statusLabel, TweenInfo.new(0.4), {TextTransparency = 1}):Play()
            end
            debugLog("UI mostrada")
        else
            TweenService:Create(frame, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {
                Size = UDim2.new(0, 0, 0, 0),
                BackgroundTransparency = 1
            }):Play()
            TweenService:Create(blur, TweenInfo.new(0.4), {Size = 0}):Play()
            TweenService:Create(dropShadow, TweenInfo.new(0.4), {ImageTransparency = 1}):Play()
            debugLog("UI oculta")
        end
    end
end)

-- Arrastrar
local dragging = false
local dragStart, startPos
local function onStart(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        debugLog("Arrastrando iniciado", input.UserInputType.Name)
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
                debugLog("Arrastrando terminado")
            end
        end)
    end
end

local function onDrag(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        local goal = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
        frame:TweenPosition(goal, Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 0.05, true)
    end
end

titleBar.InputBegan:Connect(onStart)
titleBar.InputChanged:Connect(onDrag)

debugLog("✅ UI cargada y lista")
```
